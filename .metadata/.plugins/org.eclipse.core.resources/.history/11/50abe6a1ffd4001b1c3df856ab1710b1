package com.qa.conditionals;

import java.util.ArrayList;


public class Iteration {

	public static void main(String[] args) {
		System.out.println(addNumbersInInt(412));
		System.out.println(numToWord(returnNums(85)));

	} 
	
	public static int addNumbersInInt(int val1) {
		//Parse integer value into array with separate int values
		String[] parts = Integer.toString(val1).split("(?!^)");
		int sum = 0;
		for(String p : parts) {
			int number = 0;
			try {
				number = Integer.parseInt(p);
			} catch (NumberFormatException ex) {
				ex.printStackTrace();
			}
			sum += number;
		}
		return sum;
	}
	
	public static int[] returnNums(int val1) {
		//Parse integer value into array with separate int values
		String[] parts = Integer.toString(val1).split("(?!^)");
		int[] num = new int[parts.length];
		int i = 0;
		for(String p : parts) {
			try {
				num[i] = Integer.parseInt(p);
				i++;
			} catch (NumberFormatException ex) {
				ex.printStackTrace();
			}
		}
		num = reverseArray(num);
		for(int i : num) {
		System.out.println(i);
		}
		return num;
	}
	
	public static int[] reverseArray(int[] numberArray) {
		for(int i = 0; i < numberArray.length / 2; i++) {
			int temp = numberArray[i];
			numberArray[i] = numberArray[numberArray.length - i - 1];
			numberArray[numberArray.length - 1 - 1] = temp;
		}
		return numberArray;
	}
	
	public static String numToWord(int[] number) {
		String numWord = "";
		if(number.length < 1) {
			return assignWordBelowTen(number[0]);	
		} else {
			for(int i = number.length-1; i >= 0; i--) {
				System.out.println(i);
				switch(i) {
				case 0: numWord = numWord + " " + assignWordBelowTen(number[i]);
						break;
				case 1: numWord = numWord + " " + assignWordTenTwenty(number[i]);
						break;
				default: numWord = "Number to high";
				}
			}
		}
		numWord = numWord.trim();
		return numWord;
	}
	
	public static String assignWordBelowTen(int num) {
		switch(num) {
		case 0: return "zero";
		case 1: return "one";
		case 2: return "two";
		case 3: return "three";
		case 4: return "four";
		case 5: return "five";
		case 6: return "six";
		case 7: return "seven";
		case 8: return "eight";
		case 9: return "nine";
		case 10: return "ten";
		default: return "invalid num";
		}
	}
	public static String assignWordTenTwenty(int num) {
		switch(num) {
		case 1: return "ten";
		case 2: return "twenty";
		case 3: return "thirty";
		case 4: return "fourty";
		case 5: return "fifty";
		case 6: return "sixty";
		case 7: return "seventy";
		case 8: return "eighty";
		case 9: return "ninety";
		case 10: return "one hundrad";
		default: return "invalid num";
		}
	}

}
